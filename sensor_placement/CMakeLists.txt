cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
#rosbuild_genmsg()
#uncomment if you have defined services
#rosbuild_gensrv()

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/common/include/sensor_placement)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/common/src)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include/sensor_placement)

rosbuild_add_executable(sensor_placement_node 	src/sensor_placement_node.cpp
						common/src/particle.cpp
						common/src/seneka_utilities.cpp
						common/src/sensor_model.cpp)

rosbuild_add_executable(ray_test common/src/lookup_table.cpp)
#rosbuild_add_executable(sensor_model common/src/sensor_model.cpp)
#rosbuild_add_executable(particle common/src/particle.cpp)
#common commands for building c++ executables and libraries
#rosbuild_add_library(seneka_particle common/src/sensor_model.cpp common/src/particle.cpp)
#target_link_libraries(sensor_placement_node seneka_particle)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})
